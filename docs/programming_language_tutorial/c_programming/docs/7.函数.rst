7.函数
==============

7.1.为什么要用函数
^^^^^^^^^^^^^^^^^^

   在刚开始学习C语言的时候由于程序相对简单,将所有代码全部写在主函数(main()函数)中并没有什么不妥,但随着学习的深入,代码也将越来越复杂,需要一种方法来管理代码。通过函数的方式将代码按照功能分类,并通过函数名反映函数功能,“函数”是通过function翻译而来,函数从本质上来说就是为了实现一定的功能。使用函数将特定程序封装起来,使用者不必过多关注函数具体实现。提高了代码的复用性,有利于构建更加复杂的软件。

7.2.怎么定义函数
^^^^^^^^^^^^^^^^

7.2.1.定义有参数函数
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block::c
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   类型名 函数名()
   {
         函数体
   }
   或者
   类型名 函数名(void)
   {
       函数体
   }

7.2.2.定义无参数函数
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   .. 类型名 函数名(形式参数列表)
   .. {
   ..     函数体
   .. }

7.3.调用函数
^^^^^^^^^^^^

7.4.被调函数的声明和函数原型
----------------------------------------

7.5.函数的嵌套调用
^^^^^^^^^^^^^^^^^^

7.6.函数的递归调用
^^^^^^^^^^^^^^^^^^

7.7.数组作为函数参数
^^^^^^^^^^^^^^^^^^^^

7.8.局部变量和全局变量
^^^^^^^^^^^^^^^^^^^^^^

7.9.变量的存储方式和生存期
^^^^^^^^^^^^^^^^^^^^^^^^^^

7.10.变量的声明和定义
^^^^^^^^^^^^^^^^^^^^^

7.11.内部函数和外部函数
^^^^^^^^^^^^^^^^^^^^^^^



   变量有作用域,局部变量和全局变量的区别,那么函数有作用域吗？在函数中也存在作用域问题,

7.11.1.内部函数
               



7.11.2.外部函数
~~~~~~~~~~~~~~~~~~~~~~~~~~