1.C语言学习前的准备
=========================

1.1.计算机发展简史
-------------------------

1.1.1计算机发展史上的巨人
~~~~~~~~~~~~~~~~~~~~~~~~~

1.1.1.1.查尔斯.巴贝奇
^^^^^^^^^^^^^^^^^^^^^^^^^

在计算机发展史上,差分机和分析机占有重要地位,它们的研制者查尔斯.巴贝尔是英国人,他经过十年的努力,设出一种可以进行加减计算并完成数表编制的自动计算装置,把它称为“差分机”,1822年,他试制出了一台样机,能够按照设计者的控制自动完成一连串的运算,体现了计算机最早的程序设计,1834年,他设计了一台更加完善的通用计算机工具,称为“分析机”这种程序设计思想的创建为现代计算机的发展开辟了道路。为现代计算机设计思想奠定基础。从尚存的手稿看,他的设计已经具备输入装置、处理装置、存储装置、控制装置和输出装置等5个部分,不过只能使用齿轮、连杆之类的机械装置,受当时的技术条件水平限制,直到1871年逝世,他的设计还没有变为现实。他的超越时代的设计思想也随着他的逝世被埋进了坟墓,致使100年后科学家不得不重新摸索,走他走过的路。


.. figure:: media/差分机.jpg
   :alt: 差分机
   :align: center

图 1-1 分析机部分组件的实验模型,巴贝奇自制,现藏伦敦科学博物馆

1.1.1.2.布尔
^^^^^^^^^^^^^^^^^^^^^^^^^

英国数学家布尔在1847年发表《逻辑的数学分析》、1854年发表的《思维规律的研究》,这两本著作建立了完整的二进制代数理论体系,为现代计算机提供数学方法。布尔(Boolean)是计算机科学中的逻辑数据类型,以发明布尔代数的数学家乔治·布尔为名。

.. figure:: media/布尔.png
   :alt: 布尔
   :align: center

图 1-2 布尔

1.1.1.3.图灵
^^^^^^^^^^^^^^^^^^^^^^^^^

英国数学家、逻辑学家图灵提出著名的图灵机模型为现代计算机的逻辑工作方式奠定基础。也被誉为“计算机科学之父”。在二战期间,图灵本人也参与了早期电子计算机的设计制造,他亲自设计的“巨人号”专用电子计算机曾成功地破译了德军的作战密码,他因此而荣获英国国防部的荣誉勋章。美国计算机学会在1966年创立图灵奖,用于鼓励在该领域作出杰出贡献的计算机科学家,这是世界计算机科学领域的最高奖项,有该领域的诺贝尔奖之称。

.. figure:: media/图灵.png
   :alt: 图灵
   :align: center

图 1-3 图灵

1.1.1.4.香农
^^^^^^^^^^^^^^^^^^^^^^^^^

美国数学家克劳德·香农(Claude ElwoodShannon)1938年在MIT获得电气工程硕士学位,硕士论文题目是《A Symbolic Analysis of Relay and Switching Circuits》(继电器与开关电路的符号分析)。当时他已经注意到电话交换电路与布尔代数之间的类似性,即把布尔代数的“真”与“假”和电路系统的“开”与“关”对应起来,并用1和0表示。于是他用布尔代数分析并优化开关电路,奠定了数字电路的理论基础。哈佛大学的格德纳教授说:“这可能是本世纪最重要、最著名的一篇硕士论文。”

.. figure:: media/香农.jpeg
   :alt: 香农
   :align: center

图 1-4 香农


1.1.1.5.冯.诺伊曼
^^^^^^^^^^^^^^^^^^^^^^^^^

1946年,大数学家冯·诺依曼参与设计的世界上第一台电子数字计算机(ENIAC)终于问世了,这是由美国陆军兵器局出资由弹道研究所出技术研制成的,主要应用于弹道计算。当时的ENIAC机仅用30秒钟就出色地完成了从发射到击中目标飞行了一分钟的弹道计算,被称为“比子弹还快”的超人。在这台电子计算机的设计中,冯诺依曼提出了他一整套的设计思想与原则,因而被称为冯·诺依曼机。该机的运算速度每秒钟5000次,比当时的继电器计算机快1000倍。冯·诺依曼也由于他的杰出卓越贡献而获得“计算机之父”的桂冠。冯.诺伊曼1954年发表EDVAC计算机报告,提出计算机的五大结构及存储程序的设计思想,奠定现代计算机的设计基础。

-  控制器(Control)
   是整个计算机的中枢神经,其功能是对程序规定的控制信息进行解释,根据其要求进行控制,调度程序、数据、地址,协调计算机各部分工作及内存与外设的访问等。

-  运算器(Datapath)
   运算器的功能是对数据进行各种算术运算和逻辑运算,即对数据进行加工处理。

-  存储器(Memory)
   的功能是存储程序、数据和各种信号、命令等信息,并在需要时提供这些信息。

-  输入(Input system)
   设备是计算机的重要组成部分,输入设备与输出设备合称为外部设备,简称外设,输入设备的作用是将程序、原始数据、文字、字符、控制命令或现场采集的数据等信息输入到计算机。常见的输入设备有键盘、鼠标器、光电输入机、磁带机、磁盘机、光盘机等。

-  输出(Output system)
   设备与输入设备同样是计算机的重要组成部分,它把计算机的中间结果或最后结果、机内的各种数据符号及文字或各种控制信号等信息输出出来。微机常用的输出设备有显示终端CRT、打印机、激光印字机、绘图仪及磁带、光盘机等。

.. figure:: media/冯诺伊曼.jpg
   :alt: 冯诺伊曼
   :align: center

图 1-5 冯诺伊曼

1.1.1.6.史蒂夫.乔布斯
^^^^^^^^^^^^^^^^^^^^^^^^^

史蒂夫.乔布斯在家庭车库开发了Apple I,1977年推出AppleⅡ,在市场上大受欢迎,计算机从此进入发展的黄金时代。

.. figure:: media/乔布斯.png
   :alt: 乔布斯
   :align: center

图 1-6 乔布斯


1.1.2.计算机发展的四个阶段
~~~~~~~~~~~~~~~~~~~~~~~~~~

1.1.2.1.电子管时代1946-1956年
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

一般认为ENIAC是世界上第一台电子计算机,1946年诞生于美国宾夕法尼亚大学,建成是为了二战计算弹道。也有ABC是世界上第一台计算机的说法。ENIAC占地170多平方,重达30多吨,使用18000个电子管,耗电巨大且操作复杂。

1.1.2.2.晶体管时代1956-1964年
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

1947年晶体管的诞生标志计算机的发展进入第二个阶段,1954年,贝尔实验室造出来第一台晶体管计算机TRADIC,计算速度突飞猛进。

1.1.2.2.集成电路与大规模集成电路时代1964-1970年
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

科技发展推动了集成电路的诞生,1964年,IBM推出了世界首个指令集可兼容的集成电路计算机IBM
System/360,从此出现了现代编程设计意义深远的高级编程语言BASIC、FORTRAN、C语言等。

1.1.2.3.超大规模集成电路时代1970至今
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

在1967年到1977年相继出现了大规模和超大规模集成电路,至此才出现第四代计算机。1971年Intel研发出MCS-4的四位微型计算机,1978年到1983年16位计算机蓬勃发展,最具代表的是苹果公司的Macintoch,1983-1993年Intel相继推出32位和64位微处理器。

.. figure:: media/集成电路.jpg
   :alt: 集成电路
   :align: center

图 1-7 集成电路


1.1.3.计算机软件的发展史
~~~~~~~~~~~~~~~~~~~~~~~~

1.1.3.1.第一阶段1946—1953
^^^^^^^^^^^^^^^^^^^^^^^^^

机器语言,汇编语言,只有少数专业人员能够编写程序,主要用于科学研究计算

1.1.3.2.第二阶段1954—1964
^^^^^^^^^^^^^^^^^^^^^^^^^

高级程序设计语言:容易学习,方便编程,提高了程序的可读性。这一时期的程序规模小,因此编写比较容易,还没有形成系统化的方法,对软件的开发过程更没有进行任何管理。

1.1.3.3.第三阶段1965—1970
^^^^^^^^^^^^^^^^^^^^^^^^^

计算机得到发展:集成电路取代晶体管,处理器的运算速度大幅度提高。
出现操作系统,结构化程序设计理念逐渐确立
数据规模更庞大,用户对共享数据的需求,出现了数据库技术及数据库管理系统。出现“软件危机”1968年北大西洋公约组织的计算机科学家召开会议,正式提出“软件工程”

1.1.3.4.第四阶段1971—1989
^^^^^^^^^^^^^^^^^^^^^^^^^

出现了结构化程序设计技术(Pascal、Modula-2、Basic)1973年,功能强大的C语言诞生人机交互的方式改变:引入了鼠标的概念和点击式的图形界面20世纪80年代,微电子和数字化声像技术发展,在计算机应用程序中开始使用图像、声音等多媒体信出现了多用途的应用程序,面向没有任何计算机经验的用户。

1.1.3.5.第五阶段1990年—至今
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

面向对象的程序设计逐步代替了结构化程序设计HTML语言和浏览器产生,软件体系结构由集中式的主机模式变为分布式的客户端/服务器模式或浏览器/服务器模式,通信技术和计算机网络的飞速发展。

.. figure:: media/编程语言发展.jpg
   :alt: 编程语言发展
   :align: center

图 1-8 编程语言发展


1.1.4.C语言的发展历史
~~~~~~~~~~~~~~~~~~~~~

1.1.4.1.C语言出现
^^^^^^^^^^^^^^^^^^^^^^^^^

1972到1973年美国贝尔实验室的D.M.Ritchie在B语言的基础上设计了C语言。最初的C语言只是为描述和实现UNIX操作系统提供一种工作语言而设计的,973年,Ken Thompson和D.M.Ritchie合作把UNIX的90%以上用C语言改写,即UNIX第5版(原来的UNIX操作系统是1969年由美国的贝尔实验室Ken Thompson和D.M.Ritchie开发成功的,用汇编语言编写的)。随着UNIX的日益广泛使用,C语言也迅速得到推广。开发C语言的目的在于尽可能降低用它所写的软件对硬件平台的依赖程度,使之具有可移植性。最初的C语言只是为描述和实现UNIX操作系统提供的一种工作语言而设计。11978年以后,C语言先后被一直到大、中、小和微型计算机上。C语言便很快风靡全世界,成为世界上应用最广泛的程序设计高级语言。

1.1.4.2.第一个C语言标准
^^^^^^^^^^^^^^^^^^^^^^^^^

以UNIX第7版中的C语言编译程序为基础,1978年,Brian W.Kernighan和DennisM.Ritchie 合著了影响深远的名著《The C Programming Language》,这本书中介绍的C语言成为后来广泛使用的C语言版本的基础,它是实际上第一个C语言标准。

1.1.4.3.ANSIC标准
^^^^^^^^^^^^^^^^^^^^^^^^^

1983年,美国国家标准协会(ANSI)成立了一个委员会,根据C语言问世以来各种版本对C语言的发展和扩充,制定了第一个C语言标准草案(’83 ANSI C)。ANSIC比原来的C有了很大的发展。Brian W.Kernighan和Dennis M.Ritchie 在 1988年修订了他们的经典著作The CProgramming Language,按照即将公布的ANSI C新标准重新写了该书。1989年,ANSI公布了一个完整的C语言标准—ANSI X3.159-1989(常称ANSI C或C89)。1990年,国际标准化组织ISO(International Standard Organization)接受C89作为国际标准ISO/IEC9899 : 1990,它和ANSI的C89基本上是相同的。

.. figure:: media/C语言发展关键人物.jpg
   :alt: C语言发展关键人物
   :align: center

图 1-9 C语言发展关键人物

1.2.C语言学习前的准备
---------------------------

1.2.1.C语言学习中问题的抽象
~~~~~~~~~~~~~~~~~~~~~~~~~~~

C语言中使用printf(“Hello,world!”);语句向屏幕输出一串字符“Hello,world!”,需要预处理、编译、汇编、链接过程,最终得到可执行文件。可执行文件就是机器能够直接识别和接受的二进制代码,也被称为机器指令。只要执行这个可执行文件就能实现在屏幕打印字符“Hello,world!”,我们不用去关心计算机硬件是如何将机器指令“翻译”为屏幕输出字符。这就是学习C语言中的问题抽象,如果刨根问底计算机硬件怎么就能执行这些机器指令在屏幕显示字符,就是减慢学习C语言的速度。当然这些问题也会随之学习的深入自然而然的理解。我们能够这样把问题抽象是因为前辈们已经为我们建立起软件到硬件的控制,这也是学习C语言这个高级语言的优势,会帮助我们屏蔽很多细节,只需要专注于功能实现。

1.2.2.计算机程序中的一些基本概念
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.2.2.1计算机程序
^^^^^^^^^^^^^^^^^^^^^^^^^

计算机每一个操作都是按照程序设计人员提前设定好的指令执行的,而不是计算机会自动的进行所有工作。所谓计算机程序,就是一系列的计算机能够识别和执行的指令。每一条指令使计算机执行特定的操作。只要执行这个程序计算机就会“自动的”执行各个指令,有条不絮地进行工作。每个特定的指令序列完成一定的功能。为了是计算机实现各种各样的功能,需要成千上万个程序。这些程序大多数是计算机软件开发人员根据需要设计好的,作为计算机的软件系统的一部分提供给用户使用,用户也可以根据自己的实际需要自己设计一些应用软件。

1.2.2.2计算机语言
^^^^^^^^^^^^^^^^^^^^^^^^^

计算机作为一种人与计算机交互的语言,其发展经历了几个发展阶段:

1.2.2.3机器语言
^^^^^^^^^^^^^^^^^^^^^^^^^

计算机工作基于二进制,根本上说计算机只能识别和执行0和1组成的指令。这种能够被计算机识别和执行的二进制代码称为机器指令,机器指令的集合就是该计算机的机器语言。

1.2.2.4符号语言
^^^^^^^^^^^^^^^^^^^^^^^^^

符号语言克服了机器难以理解、难以推广等问题,使用英文符号和数字表示指令,例如ADD代表“加”,SUB代表“减”,LD代表“传送”。显然,计算机不能直接识别和执行符号语言的命令,需要汇编程序的软件,把符号语言的指令转换为机器语言,转换的过程称为“汇编”,因此符号语言也称为汇编语言。由于“贴近”计算机,也被称为计算机“低级语言”。

1.2.2.5高级语言
^^^^^^^^^^^^^^^^^^^^^^^^^

高级语言克服了低级语言不同机器不能够通用的兼容问题,它更加接近与人们的自然语言和数学语言,很容易被理解和使用,且不依赖与具体机器,它与机器距离较远,称为计算机“高级语言”。

1.2.3.高级语言的发展阶段
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

1.2.3.1.非结构化语言
^^^^^^^^^^^^^^^^^^^^^^^^^

初期的语言属于非机构化的语言,编程风格比较随意,只要符合语法规则即可,没有严格的规范要求,程序中的流程可以随意跳转。人们往往追求程序执行效率而采用许多“小技巧”,使程序变得难以阅读和维护。早期的BASIC、FORTRAN和ALGOL等就属于非结构化的语言。

1.2.3.2.结构化语言
^^^^^^^^^^^^^^^^^^^^^^^^^

为了解决上述问题,提出了“结构化程序设计方法”,规定程序必须由具有良好特性的基本结构(顺序结构、分支结构、循环结构)构成,程序中的流程不允许随意跳转,程序总是由上而下顺序执行各个基本结构。这种程序结构清晰,易于编写、阅读和维护。

1.2.3.3.面向对象语言
^^^^^^^^^^^^^^^^^^^^^^^^^

近十多年来,在处理规模较大的问题时,开始使用面向对象的语言。C++,C#,Vusual
Basic和Java等语言是支持面向对象程序设计方法的语言。

1.2.4.C语言程序编译运行流程
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

编辑:编辑类似于文本编辑,将程序代码输入进去,可以修改,增加,删除。

编译:编译是将C代码转换成CPU可执行机器指令的过程,每个.c文件生成一个.obj文件。

链接:链接是把生成的(多个) .obj
文件及用到的库文件(.lib)一起组合生成可执行文件(.exe)。

运行:运行是指运行链接环节生成的可执行文件,得到预期结果的过程。

1.2.5.C语言的编译器从哪里来?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

机器语言是直接被CPU执行,不需要编译器。汇编语言虽然是机器语言的助记符,但是也需要编译为机器语言才能执行,因此用机器语言编写了第一个编译器。有了汇编语言后就可以使用汇编语言去写C语言的编辑器。用汇编语言写的C语言编译器是编译器的老祖宗。有了这个老祖宗后可以使用C语言去写C语言的编译器,只不过这个C语言编译器本身需要汇编去编译。经过层层的努力,最终可以使用C语言开发的编译器去开发C语言本身。

1.2.6.C程序基本框架
~~~~~~~~~~~~~~~~~~~

.. code-block:: c
   :caption: Hello, world!程序
   :emphasize-lines: 4,5
   :linenos:

   #include <stdio.h> //预处理命令 /*\* \* 程序执行的入口点。 \*/ 

   int main() 
   {
       // 在标准输出中打印 “Hello, world!” 
       printf("Hello,world!");
       return 0; 
   }

1. 如上是编写的第一个C语言程序,命名为“helloworld.c”,称这个.c文件为源代码
2. #include是预处理命令,stdio.h称为头文件,这个文件包含了C语言标准的输入输出函数的声明
3. 以/\*\*/结构包括的中间内容是为了方便开发人员快熟了解程序,称之为“注释",删除与增加不影响程序运行的结果。同样以//开头的“在标准输出中打印”Hello,world!部分是注释的另外一种方法
4. int main(){}结构称之为“主函数”,函数是实现一个或多个功能的集合,{}内部即为函数体,也就是具体实现的功能。一个C程序可以包含多个函数,但是main函数只能有一个并且是程序执行的第一个函数,也就是程序开始的地方。
5. c文件内容在编辑器中被编写出来,通过编译器首先预处理为预处理文件.i,然后被编译为汇编文件.s,在后汇编为机器文件.obj,最后链接为可执行文件.exe,如上“helloworld.c”程序被执行后向屏幕输出一串字符“Hello,world!”,即为这个函数的功能。这里面编辑器是使用的VS Code软件,开发人员写代码的地方,预处理、编译、汇编、链接过程是由编译器MinGW来完成的。当然前提是编写的代码没有问题,如果编写有问题,还需要排查问题。

1.2.7.C语言的两种注释方法
~~~~~~~~~~~~~~~~~~~~~~~~~

1.2.7.1.单行注释
^^^^^^^^^^^^^^^^^^^^^^^^^

以//开始的单行注释。这种注释可以单独占一行,也可以出现在一行中其他内容的右侧。此种注释范围从//开始,以换行符结束。也就是说这种注释不能跨行。如果注释内容一行写不下,可以用多个单行注释。

1.2.7.2.多行注释或者块注释
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

以/*开始,以*/结束的多行注释。这种注释可以包含多行内容。它可以单独占一行(在行开头以/*开始,行末以*/结束),可以包含多行。编译系统在发现一个/*后,会开始找注释结束符*/,把二者间的内容作为注释。

------------------------------------------------------------------------------------------------------------------------------------------------------------------
