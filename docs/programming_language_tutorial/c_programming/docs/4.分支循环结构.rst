4.分支循环结构
==============

4.1.分支结构
------------------

   C语言中使用两种选择语句,一是if语句来实现两个分支的选择结构,二是switch语句来实现多分支的选择结构。

4.1.1.if语句
~~~~~~~~~~~~~~~~~~~~~~~~~~

   小美:如果我能再瘦10斤,我就能穿那件漂亮的碎花裙了!用伪代码描述:设定瘦的斤数为i,如果i大于10斤不能穿,否则能穿。在前面已经学习C语言可以通过关系表达式来描述i > 10或者i < 10这类问题,是如何描述“如果”这个条件呢？在C语言中使用if语句来描述条件判断,用else语句描述否则判断。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   #include <stdio.h>

   int main(void)
   {
       int i = 9;  //定义变量,表示瘦的斤数
       
       if(a > 10)
       {
           printf("可以穿碎花裙啦!");    
       }
       else
       {
           printf("不可以穿碎花裙");    
       }
       return 0;
   }

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   //C语言中if语句的表现形式有三种:

   //一是:
   if(表达式)
   {
       //逻辑值为真则执行
   }

   //二是:
   if(表达式)
   {
       //逻辑值为真则执行
   }
   else
   {
       //逻辑值为假则执行
   }

   //二是:
   if(表达式)
   {
       //逻辑值为真则执行
   }
   else if
   {
       //逻辑值为假则执行
   }
   ... //此处省略N多个else if { }
   else
   {
       
   }

4.1.2.switch语句
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

C语言提供另外一种分支结构,通过switch语句实现。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   switch(表达式)
   {
       case 常量表达式:语句或者代码块
       case 常量表达式:语句或者代码块
       ...
       case 常量表达式:语句或者代码块
       default:语句或者代码块
   }

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   #include <stdio.h>

   int main(void)
   {
       char ch;
       printf("请输入成绩: ");
       scanf("%c,&ch");
       
       switch(ch)
       {
           case 'A':printf("你的成绩在90分以上! \n");
           case 'B':printf("你的成绩在80~89分以上! \n");
           case 'C':printf("你的成绩在70~79分以上! \n");
           case 'D':printf("你的成绩在60~69分以上! \n");
           case 'E':printf("你的成绩在60分以下! \n");
           default:printf("请输入有效的成绩评级! \r");
       }
       return 0;
   }

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   switch(表达式)
   {
       case 常量表达式:语句或者代码块1;break;
       case 常量表达式:语句或者代码块2;break;
       ...
       case 常量表达式:语句或者代码块n;break;
       default:语句或者代码块n+1;break;
   }

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   #include <stdio.h>

   int main(void)
   {
       char ch;
       printf("请输入成绩: ");
       scanf("%c,&ch");
       
       switch(ch)
       {
           case 'A':printf("你的成绩在90分以上! \n");break;
           case 'B':printf("你的成绩在80~89分以上! \n");break;
           case 'C':printf("你的成绩在70~79分以上! \n");break;
           case 'D':printf("你的成绩在60~69分以上! \n");break;
           case 'E':printf("你的成绩在60分以下! \n");break;
           default:printf("请输入有效的成绩评级! \r");
       }
       return 0;
   }

4.1.1.分支嵌套
~~~~~~~~~~~~~~~~~~~~~~~

如果一个if语句中包含另外一个if语句,就称为if语句的嵌套,也称为分支结构的嵌套。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   if()
   {
       if()
       {
       }
       else
       {
       }
   }
   else
   {
       if()
       {
       }
       else
       {
       }
   }

4.2.循环结构
----------------------

C语言中有3种方式实现循环语句。

4.2.1.while语句
~~~~~~~~~~~~~~~~~~~~~~~~


   while语句中只要表达式的值为真,则执行循环体,直到表达式为假。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   while (表达式)
   {
       //循环体
   }


4.2.2.do-while语句
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



4.2.3.for语句
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

C语言中第3种实现循环结构的是for语句,相比较于while和do-while语句,for循环更加简洁、灵活。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   for(表达式1;表达式2;表达式3)
   {
   //循环体
   }



实现一个火箭发射10秒倒计时的函数。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   #include <stdio.h>

   int main(void)
   {
       for(int i=1;i<=10;i++)
       {
           printf("%d\n",i);
       }
       printf("点火");
       return 0;
   }

   问题:实现判断一个数是不是素数？

   分析:素数又称质数。所谓素数是指除了1和它本身以外,不能被任何整数整除的数,反之称之为合数。0和1既不是素数也不是合数。可以用2到这个数本身一个数一个数试的方法,在这个数不是很大的情况下显然是可行的。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   #include <stdio.h>

   int main(void)
   {
       printf("请输入一个整数!");
       int num;
       scanf("%d",&num);
     for(int i=2;i<=num;i++)
       {
           if(num % i == 0)
           {
               printf("%d不是一个素数!\n",num);
           }
           else
           {
               printf("%d是一个素数!\n",num);
           }
           printf("%d\n",i);
       }
       return 0;
   }


实现乘法表打印。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   #include <stdio.h>

   int main(void)
   {
     for(int i = 1;i <= 9;i++)
       {
           for(int j = 1;j <= i;j++)
           {
               printf("%d*%d=%d ",i,j,i*j);
           }
           printf("\n");
       }
       return 0;
   }

4.2.4.break语句
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   在switch语句中提到break语句,当时只知道break语句有跳出功能。下面具体来说break语句的用法。回到求一个数是不是素数的问题,for(int i=2;i<=num;i++)由于一个数不可能被大于其一半的数整除,所以在2到其值一半的数中能找到把它整除的数就是合数,可以改进为for(int i=2;i<=num/2;i++)。一个数可能被多个数整除,只要找到其中一个能把它整除的数即可,而不用全部遍历。

.. code-blockc
   :caption: c test
   :emphasize-lines: 4,5
   :linenos:

   #include <stdio.h>

   int main(void)
   {
       printf("请输入一个整数!");
       int num;
       scanf("%d",&num);
     for(int i=2;i<=num/2;i++)
       {
           if(num % i == 0)
           {
               printf("%d不是一个素数!\n",num);
         break;
           }
           else
           {
               printf("%d是一个素数!\n",num);
           }
           printf("%d\n",i);
       }
       return 0;
   }

4.2.5.continue语句
                  



   前面学习了break语句,break语句用于跳出for循环,还有一种情况是跳出本轮循环,然后继续循环下一轮循环。下面引出continue语句,当满足某种条件时候,跳出本轮循环,直接执行下一轮循环。



   编写一个程序输入一串字符,忽略字符中的空格,并打印出来。

.. code c

   #include <stdio.h>

   int main()
   {    
       int str[20];
       int length =0;
       
       printf("请输入一串字符\r\n");
       scanf("%s",&str);
       length = strlen(str);
       
       for(int i=0;i>length;i--)
       {
           if(str[i] == ' ')
           {
               continue;
           }
           else
           {
               printf("%c",str[i]);
           }
       }
       return 0;
   }

\*4.2.6.goto语句